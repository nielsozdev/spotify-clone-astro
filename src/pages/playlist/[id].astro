---

import { ButtonPlayer } from '@components/button-player/ButtonPlayer'
import Cover from '@components/cover/Cover.astro'
import TopbarHeader from '@components/header/TopbarHeader.astro'
import { MediaCollections } from '@components/tables/MediaCollections'
import Container from '@components/ui/atoms/Container.astro'
import ContainerHeaderBox from '@components/ui/atoms/ContainerHeaderBox.astro'
import Layout from '@layouts/Layout.astro'
import { getAllPlaylists } from '@services/playlists.services'

export const prerender = false

export async function getStaticPaths() {
  const playlists = await getAllPlaylists()

  const data = playlists.map((playlist) => {
    return {
      params: { id: playlist.id },
      props: { ...playlist }
    }
  })

  return data
}

const path = Astro.url.pathname

const idPlaylist = Astro.params.id as string

const { title, id, cover, songs, duration, type, artist, color, tracksCount } =
  Astro.props
---

<Layout title={`${title}`} transition:name=`playlist-${id}-box2`>
  <ContainerHeaderBox color={color} transition:name=`playlist-${id}-box`>
    <TopbarHeader slot='button-back' />

    <Cover
      type={type}
      id={idPlaylist}
      cover={cover ?? null}
      artist={artist}
      duration={duration}
      tracksCount={tracksCount}
      title={title}
    />
    {
      !!songs.length && (
        <ButtonPlayer
          client:load
          id={idPlaylist}
          size='big'
          type={type}
          path={path}
          slot='button-player'
        />
      )
    }
  </ContainerHeaderBox>

  {
    !!songs.length && (
      <Container>
        <MediaCollections
          client:load
          songs={songs}
          id={idPlaylist}
          type={type}
        />
      </Container>
    )
  }
  {
    !songs.length && (
      <Container>
        <h2 class='text-2xl font-semibold'>AÃ±ade canciones a tu playlist</h2>
        <div class='py-3' />
      </Container>
    )
  }
</Layout>
